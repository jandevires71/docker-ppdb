version: '3'

services:
  traefik:
    image: traefik:1.6.6
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${TRAEFIK_TOML_FILE:-./traefik/ppdb.traefik.toml}:/traefik.toml
      #- ${ACME_JSON:-./traefik/acme.json}:/acme.json
    labels:
      - "traefik.enable=false"
      - "traefik.port=8080"
      - ${TRAEFIK_URL_CONFIG:-traefik.frontend.rule=Host:traefik.docker.localhost}

  postgres:
    build: ./postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./postgres/conf.d:/conf.d
      - ./data:/data # python data share
      - miniodata:/mnt/miniodata # minio data share
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REPLICATION_USER=${REPLICATION_USER}
      - REPLICATION_PASSWORD=${REPLICATION_PASSWORD}
    networks:
      - default # postgres datasource grafana
      - pgnet

  pgadmin:
    image: dpage/pgadmin4:3.3
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    expose:
      - "80"
#    ports:
#      - "5050:80"
    networks:
      - web
      - pgnet
    volumes:
      - ./pgadmin:/root/.pgadmin
    labels:
      - "traefik.backend=naturalis-pgadmin"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=80"
      - ${GRAFANA_URL_CONFIG:-traefik.frontend.rule=Host:pgadmin.ppdb.naturalis.nl}

  python:
    build: ./python
    command: jupyter notebook --ip=0.0.0.0 --port=8000 --allow-root
    depends_on:
      - postgres
    volumes:
      - ./python/script:/usr/src/app
      - ./python/logs:/var/log/app
      - ./data:/data
      - ./python/jupyter:/root/.jupyter
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}@${POSTGRES_PASSWORD}/${POSTGRES_DB}"
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_DB: ${POSTGRES_DB}
      DATABASE_HOST: ${POSTGRES_HOST}
    networks:
      - default # postgres datasource grafana
      - pgnet

  minio:
    image: minio/minio:RELEASE.2018-09-12T18-49-56Z
    restart: unless-stopped
    command: "server /data"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-12345}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-12345678}
    expose:
      - "9000"
    volumes:
      - miniodata:/data
      #- "/data/minioconfig:/root/.minio"
    networks:
      - web
      - default
    labels:
      - "traefik.backend=minio"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=9000"
      - ${MINIO_URL_CONFIG:-traefik.frontend.rule=Host:minio.ppdb.naturalis.nl}

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - default

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - default
      - pgnet
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - default
    depends_on:
      - elasticsearch

networks:
  pgnet:
    external: true
  web:
    external: true

volumes:
  pglog:
  pgdata:
  miniodata:
